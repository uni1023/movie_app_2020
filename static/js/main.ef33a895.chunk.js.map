{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","Navigation","Detail","props","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"sUAeeA,MAZf,WAEI,OACA,yBAAKC,UAAU,oBACX,oIAGI,uD,gFC+BGC,MAlCf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,yBAAKN,UAAU,SACb,kBAAC,IAAD,CACEO,GAAI,CACFC,SAAU,gBACVC,MAAO,CAAEN,OAAMD,QAAOE,UAASC,SAAQC,YAGzC,yBAAKI,IAAKL,EAAQM,IAAKT,EAAOA,MAAOA,IACrC,yBAAKF,UAAU,eACb,wBAAIA,UAAU,gBAAgBE,GAC9B,wBAAIF,UAAU,eAAeG,GAC7B,wBAAIH,UAAU,iBACXM,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACX,wBAAIC,IAAKD,EAAOd,UAAU,iBACvBa,OAIR,uBAAGb,UAAU,kBAAkBI,EAAQY,MAAM,EAAG,KAAhD,WC+BOC,G,kNAlDbR,MAAQ,CACNS,WAAY,EACZC,OAAQ,I,EAKVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,yDALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IANzB,2C,kEAUVQ,KAAKN,c,+BAIG,IAAD,EACuBM,KAAKjB,MAA3BS,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASnB,UAAU,aAChBkB,EACC,yBAAKlB,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZmB,EAAOP,KAAI,SAACe,GAEX,OAAO,kBAAC,EAAD,CACGZ,IAAKY,EAAMC,GACXA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZD,MAAOyB,EAAMzB,MACbE,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAAQqB,EAAMrB,kB,GA3CnBwB,IAAMC,Y,MCUVC,MATf,WACI,OACI,yBAAKhC,UAAU,OACX,kBAAC,IAAD,CAAMO,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WCUG0B,E,kLAjBU,IAAD,EACcP,KAAKQ,MAA3BC,EADQ,EACRA,SAAUC,EADF,EACEA,aACKC,IAAnBF,EAAS1B,OACT2B,EAAQE,KAAK,O,+BAIX,IACEH,EAAaT,KAAKQ,MAAlBC,SACR,OAAIA,EAAS1B,MACF,8BAAO0B,EAAS1B,MAAMP,OAEtB,S,GAbE4B,IAAMC,WCmBZQ,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWzB,IACxC,kBAAC,IAAD,CAAOuB,KAAK,SAASE,UAAW3C,IAChC,kBAAC,IAAD,CAAOyC,KAAK,gBAAgBE,UAAWT,MCZ7CU,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.ef33a895.chunk.js","sourcesContent":["import React from 'react';\nimport './About.css';\n\nfunction About() {\n\n    return (\n    <div className=\"about__container\">\n        <span>\n            \"Freedom is the freedom to say that two plus two make four. If that is granted, all else follows.\"\n            </span>\n            <span>- George Orwe, 1984</span>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\nimport { Link } from 'react-router-dom';\n\n// Movie 컴포넌트는 state가 필요없으므로 클래스형 컴포넌트가 아니라 함수형 컴포넌트로 작성할거야.\n\nfunction Movie({ title, year, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: '/movie-detail',\n          state: { year, title, summary, poster, genres },\n        }}\n      >\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <ul className=\"movie__genres\">\n            {genres.map((genre, index) => (\n             <li key={index} className=\"genres__genre\">\n               {genre}\n             </li>\n           ))}\n         </ul>\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n       </div>\n     </Link>\n    </div>\n  );     \n}\n\nMovie.propTypes = { // propTypes -> Movie에 넘어와야 하는 영화 데이터를 정의하고 관리하기 위해 사용함.\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired, // 이미지 주소값 (string)이 저장될것임.\n}; \n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from '../components/Movie';\nimport './Home.css';\n\nclass Home extends React.Component {\n  // React.Component 클래스의 기능을 추가한 App 클래스\n  // 실제로 React.Component 클래스는 500줄이 넘는 코드로 여러 기능이 구현되어 있음.\n  state = {\n    isLoading : true,\n    movies: [],\n  };\n  // async와 await는 함께 사용해야함.\n\n  // 점 연산자 적용 순서대로 구조 분해 할당을 적용함\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false });\n  };\n  componentDidMount() {\n    // 영화 데이터 로딩!\n    this.getMovies();\n    \n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => {\n              \n              return <Movie\n                        key={movie.id}\n                        id={movie.id}\n                        year={movie.year}\n                        title={movie.title}\n                        summary={movie.summary}\n                        poster={movie.medium_cover_image}\n                        genres={movie.genres}\n                      />;\n          })}\n          </div>\n        )} \n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\n\n// a 태그를 사용하면 클릭할 때마다 새로고침함으로 리액트의 장점이 사라짐 => react-router-dom 기능을 사용하면 됨.\nfunction Navigation() {\n    return (\n        <div className=\"nav\">\n            <Link to=\"/\">Home</Link> \n            <Link to=\"/about\">About</Link>\n        </div>\n    );\n}\n\nexport default Navigation;","import React from 'react';\n\nclass Detail extends React.Component {\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push('/');\n        }    \n    }\n\n    render() {\n        const { location } = this.props;\n        if (location.state) {\n            return <span>{location.state.title}</span>;\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default Detail;","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n\n\n// Navigation.js 안의 Link, Router 컴포넌트는 반드시 <HashRouter> 안에 포함되어있어야 함.\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie-detail\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root')); // App 컴포넌트를 아이디가 'root'인 엘리먼트에 그린다(ReactDom.render) 수정 전 원본\n"],"sourceRoot":""}